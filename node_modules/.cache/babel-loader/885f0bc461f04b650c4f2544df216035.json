{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Kamikaze\\\\Desktop\\\\Mainnet\\\\metaplex\\\\js\\\\packages\\\\candy-machine-ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import _asyncToGenerator from\"C:\\\\Users\\\\Kamikaze\\\\Desktop\\\\Mainnet\\\\metaplex\\\\js\\\\packages\\\\candy-machine-ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\Kamikaze\\\\Desktop\\\\Mainnet\\\\metaplex\\\\js\\\\packages\\\\candy-machine-ui\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import*as anchor from'@project-serum/anchor';import{MintLayout,TOKEN_PROGRAM_ID,Token}from'@solana/spl-token';import{SystemProgram,SYSVAR_SLOT_HASHES_PUBKEY}from'@solana/web3.js';import{sendTransactions,SequenceType}from'./connection';import{CIVIC,getAtaForMint,getNetworkExpire,getNetworkToken,SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID}from'./utils';export var CANDY_MACHINE_PROGRAM=new anchor.web3.PublicKey('cndy3Z4yapfJBmL3ShUp5exZKqR3z33thTzeNMm2gRZ');var TOKEN_METADATA_PROGRAM_ID=new anchor.web3.PublicKey('metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s');export var awaitTransactionSignatureConfirmation=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(txid,timeout,connection){var queryStatus,done,status,subId,_args3=arguments;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:queryStatus=_args3.length>3&&_args3[3]!==undefined?_args3[3]:false;done=false;status={slot:0,confirmations:0,err:null};subId=0;_context3.next=6;return new Promise(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(resolve,reject){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setTimeout(function(){if(done){return;}done=true;console.log('Rejecting for timeout...');reject({timeout:true});},timeout);case 1:if(!(!done&&queryStatus)){_context2.next=7;break;}// eslint-disable-next-line no-loop-func\n_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var signatureStatuses;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return connection.getSignatureStatuses([txid]);case 3:signatureStatuses=_context.sent;status=signatureStatuses&&signatureStatuses.value[0];if(!done){if(!status){console.log('REST null result for',txid,status);}else if(status.err){console.log('REST error for',txid,status);done=true;reject(status.err);}else if(!status.confirmations){console.log('REST no confirmations for',txid,status);}else{console.log('REST confirmation for',txid,status);done=true;resolve(status);}}_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);if(!done){console.log('REST connection error: txid',txid,_context.t0);}case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}))();_context2.next=5;return sleep(2000);case 5:_context2.next=1;break;case 7:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x4,_x5){return _ref2.apply(this,arguments);};}());case 6:status=_context3.sent;//@ts-ignore\nif(connection._signatureSubscriptions[subId]){connection.removeSignatureListener(subId);}done=true;console.log('Returning status',status);return _context3.abrupt(\"return\",status);case 11:case\"end\":return _context3.stop();}}},_callee3);}));return function awaitTransactionSignatureConfirmation(_x,_x2,_x3){return _ref.apply(this,arguments);};}();var createAssociatedTokenAccountInstruction=function createAssociatedTokenAccountInstruction(associatedTokenAddress,payer,walletAddress,splTokenMintAddress){var keys=[{pubkey:payer,isSigner:true,isWritable:true},{pubkey:associatedTokenAddress,isSigner:false,isWritable:true},{pubkey:walletAddress,isSigner:false,isWritable:false},{pubkey:splTokenMintAddress,isSigner:false,isWritable:false},{pubkey:anchor.web3.SystemProgram.programId,isSigner:false,isWritable:false},{pubkey:TOKEN_PROGRAM_ID,isSigner:false,isWritable:false},{pubkey:anchor.web3.SYSVAR_RENT_PUBKEY,isSigner:false,isWritable:false}];return new anchor.web3.TransactionInstruction({keys:keys,programId:SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,data:Buffer.from([])});};export var getCandyMachineState=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(anchorWallet,candyMachineId,connection){var provider,idl,program,state,itemsAvailable,itemsRedeemed,itemsRemaining;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:provider=new anchor.Provider(connection,anchorWallet,{preflightCommitment:'processed'});_context4.next=3;return anchor.Program.fetchIdl(CANDY_MACHINE_PROGRAM,provider);case 3:idl=_context4.sent;program=new anchor.Program(idl,CANDY_MACHINE_PROGRAM,provider);_context4.next=7;return program.account.candyMachine.fetch(candyMachineId);case 7:state=_context4.sent;itemsAvailable=state.data.itemsAvailable.toNumber();itemsRedeemed=state.itemsRedeemed.toNumber();itemsRemaining=itemsAvailable-itemsRedeemed;return _context4.abrupt(\"return\",{id:candyMachineId,program:program,state:{authority:state.authority,itemsAvailable:itemsAvailable,itemsRedeemed:itemsRedeemed,itemsRemaining:itemsRemaining,isSoldOut:itemsRemaining===0,isActive:false,isPresale:false,isWhitelistOnly:false,goLiveDate:state.data.goLiveDate,treasury:state.wallet,tokenMint:state.tokenMint,gatekeeper:state.data.gatekeeper,endSettings:state.data.endSettings,whitelistMintSettings:state.data.whitelistMintSettings,hiddenSettings:state.data.hiddenSettings,price:state.data.price,retainAuthority:state.data.retainAuthority}});case 12:case\"end\":return _context4.stop();}}},_callee4);}));return function getCandyMachineState(_x6,_x7,_x8){return _ref4.apply(this,arguments);};}();var getMasterEdition=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(mint){return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return anchor.web3.PublicKey.findProgramAddress([Buffer.from('metadata'),TOKEN_METADATA_PROGRAM_ID.toBuffer(),mint.toBuffer(),Buffer.from('edition')],TOKEN_METADATA_PROGRAM_ID);case 2:return _context5.abrupt(\"return\",_context5.sent[0]);case 3:case\"end\":return _context5.stop();}}},_callee5);}));return function getMasterEdition(_x9){return _ref5.apply(this,arguments);};}();var getMetadata=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(mint){return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return anchor.web3.PublicKey.findProgramAddress([Buffer.from('metadata'),TOKEN_METADATA_PROGRAM_ID.toBuffer(),mint.toBuffer()],TOKEN_METADATA_PROGRAM_ID);case 2:return _context6.abrupt(\"return\",_context6.sent[0]);case 3:case\"end\":return _context6.stop();}}},_callee6);}));return function getMetadata(_x10){return _ref6.apply(this,arguments);};}();export var getCandyMachineCreator=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(candyMachine){return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.next=2;return anchor.web3.PublicKey.findProgramAddress([Buffer.from('candy_machine'),candyMachine.toBuffer()],CANDY_MACHINE_PROGRAM);case 2:return _context7.abrupt(\"return\",_context7.sent);case 3:case\"end\":return _context7.stop();}}},_callee7);}));return function getCandyMachineCreator(_x11){return _ref7.apply(this,arguments);};}();export var getCollectionPDA=/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(candyMachineAddress){return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:_context8.next=2;return anchor.web3.PublicKey.findProgramAddress([Buffer.from('collection'),candyMachineAddress.toBuffer()],CANDY_MACHINE_PROGRAM);case 2:return _context8.abrupt(\"return\",_context8.sent);case 3:case\"end\":return _context8.stop();}}},_callee8);}));return function getCollectionPDA(_x12){return _ref8.apply(this,arguments);};}();export var getCollectionAuthorityRecordPDA=/*#__PURE__*/function(){var _ref9=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee9(mint,newAuthority){return _regeneratorRuntime.wrap(function _callee9$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:_context9.next=2;return anchor.web3.PublicKey.findProgramAddress([Buffer.from('metadata'),TOKEN_METADATA_PROGRAM_ID.toBuffer(),mint.toBuffer(),Buffer.from('collection_authority'),newAuthority.toBuffer()],TOKEN_METADATA_PROGRAM_ID);case 2:return _context9.abrupt(\"return\",_context9.sent[0]);case 3:case\"end\":return _context9.stop();}}},_callee9);}));return function getCollectionAuthorityRecordPDA(_x13,_x14){return _ref9.apply(this,arguments);};}();export var createAccountsForMint=/*#__PURE__*/function(){var _ref10=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee10(candyMachine,payer){var mint,userTokenAccountAddress,signers,instructions;return _regeneratorRuntime.wrap(function _callee10$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:mint=anchor.web3.Keypair.generate();_context10.next=3;return getAtaForMint(mint.publicKey,payer);case 3:userTokenAccountAddress=_context10.sent[0];signers=[mint];_context10.t0=anchor.web3.SystemProgram;_context10.t1=payer;_context10.t2=mint.publicKey;_context10.t3=MintLayout.span;_context10.next=11;return candyMachine.program.provider.connection.getMinimumBalanceForRentExemption(MintLayout.span);case 11:_context10.t4=_context10.sent;_context10.t5=TOKEN_PROGRAM_ID;_context10.t6={fromPubkey:_context10.t1,newAccountPubkey:_context10.t2,space:_context10.t3,lamports:_context10.t4,programId:_context10.t5};_context10.t7=_context10.t0.createAccount.call(_context10.t0,_context10.t6);_context10.t8=Token.createInitMintInstruction(TOKEN_PROGRAM_ID,mint.publicKey,0,payer,payer);_context10.t9=createAssociatedTokenAccountInstruction(userTokenAccountAddress,payer,payer,mint.publicKey);_context10.t10=Token.createMintToInstruction(TOKEN_PROGRAM_ID,mint.publicKey,userTokenAccountAddress,payer,[],1);instructions=[_context10.t7,_context10.t8,_context10.t9,_context10.t10];_context10.t11=mint;_context10.t12=userTokenAccountAddress;_context10.next=23;return sendTransactions(candyMachine.program.provider.connection,candyMachine.program.provider.wallet,[instructions],[signers],SequenceType.StopOnFailure,'singleGossip',function(){},function(){return false;},undefined,[],[]);case 23:_context10.t13=_context10.sent.txs[0].txid;return _context10.abrupt(\"return\",{mint:_context10.t11,userTokenAccount:_context10.t12,transaction:_context10.t13});case 25:case\"end\":return _context10.stop();}}},_callee10);}));return function createAccountsForMint(_x15,_x16){return _ref10.apply(this,arguments);};}();export var mintOneToken=/*#__PURE__*/function(){var _ref11=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee11(candyMachine,payer){var _setupState$mint;var beforeTransactions,afterTransactions,setupState,mint,userTokenAccountAddress,userPayingAccountAddress,candyMachineAddress,remainingAccounts,cleanupInstructions,instructions,signers,_mint,whitelistToken,whitelistBurnAuthority,exists,transferAuthority,metadataAddress,masterEdition,_yield$getCandyMachin,_yield$getCandyMachin2,candyMachineCreator,creatorBump,_yield$getCollectionP,_yield$getCollectionP2,collectionPDA,collectionPDAAccount,collectionData,collectionMint,collectionAuthorityRecord,collectionMetadata,collectionMasterEdition,instructionsMatrix,signersMatrix,txns,mintTxn,_args11=arguments;return _regeneratorRuntime.wrap(function _callee11$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:beforeTransactions=_args11.length>2&&_args11[2]!==undefined?_args11[2]:[];afterTransactions=_args11.length>3&&_args11[3]!==undefined?_args11[3]:[];setupState=_args11.length>4?_args11[4]:undefined;mint=(_setupState$mint=setupState===null||setupState===void 0?void 0:setupState.mint)!==null&&_setupState$mint!==void 0?_setupState$mint:anchor.web3.Keypair.generate();_context11.next=6;return getAtaForMint(mint.publicKey,payer);case 6:userTokenAccountAddress=_context11.sent[0];if(!candyMachine.state.tokenMint){_context11.next=13;break;}_context11.next=10;return getAtaForMint(candyMachine.state.tokenMint,payer);case 10:_context11.t0=_context11.sent[0];_context11.next=14;break;case 13:_context11.t0=payer;case 14:userPayingAccountAddress=_context11.t0;candyMachineAddress=candyMachine.id;remainingAccounts=[];cleanupInstructions=[];instructions=[];signers=[];console.log('SetupState: ',setupState);if(setupState){_context11.next=40;break;}signers.push(mint);_context11.t1=instructions.push;_context11.t2=instructions;_context11.t3=anchor.web3.SystemProgram;_context11.t4=payer;_context11.t5=mint.publicKey;_context11.t6=MintLayout.span;_context11.next=31;return candyMachine.program.provider.connection.getMinimumBalanceForRentExemption(MintLayout.span);case 31:_context11.t7=_context11.sent;_context11.t8=TOKEN_PROGRAM_ID;_context11.t9={fromPubkey:_context11.t4,newAccountPubkey:_context11.t5,space:_context11.t6,lamports:_context11.t7,programId:_context11.t8};_context11.t10=_context11.t3.createAccount.call(_context11.t3,_context11.t9);_context11.t11=Token.createInitMintInstruction(TOKEN_PROGRAM_ID,mint.publicKey,0,payer,payer);_context11.t12=createAssociatedTokenAccountInstruction(userTokenAccountAddress,payer,payer,mint.publicKey);_context11.t13=Token.createMintToInstruction(TOKEN_PROGRAM_ID,mint.publicKey,userTokenAccountAddress,payer,[],1);_context11.t14=[_context11.t10,_context11.t11,_context11.t12,_context11.t13];_context11.t1.apply.call(_context11.t1,_context11.t2,_context11.t14);case 40:if(!candyMachine.state.gatekeeper){_context11.next=55;break;}_context11.t15=remainingAccounts;_context11.next=44;return getNetworkToken(payer,candyMachine.state.gatekeeper.gatekeeperNetwork);case 44:_context11.t16=_context11.sent[0];_context11.t17={pubkey:_context11.t16,isWritable:true,isSigner:false};_context11.t15.push.call(_context11.t15,_context11.t17);if(!candyMachine.state.gatekeeper.expireOnUse){_context11.next=55;break;}remainingAccounts.push({pubkey:CIVIC,isWritable:false,isSigner:false});_context11.t18=remainingAccounts;_context11.next=52;return getNetworkExpire(candyMachine.state.gatekeeper.gatekeeperNetwork);case 52:_context11.t19=_context11.sent[0];_context11.t20={pubkey:_context11.t19,isWritable:false,isSigner:false};_context11.t18.push.call(_context11.t18,_context11.t20);case 55:if(!candyMachine.state.whitelistMintSettings){_context11.next=70;break;}_mint=new anchor.web3.PublicKey(candyMachine.state.whitelistMintSettings.mint);_context11.next=59;return getAtaForMint(_mint,payer);case 59:whitelistToken=_context11.sent[0];remainingAccounts.push({pubkey:whitelistToken,isWritable:true,isSigner:false});if(!candyMachine.state.whitelistMintSettings.mode.burnEveryTime){_context11.next=70;break;}whitelistBurnAuthority=anchor.web3.Keypair.generate();remainingAccounts.push({pubkey:_mint,isWritable:true,isSigner:false});remainingAccounts.push({pubkey:whitelistBurnAuthority.publicKey,isWritable:false,isSigner:true});signers.push(whitelistBurnAuthority);_context11.next=68;return candyMachine.program.provider.connection.getAccountInfo(whitelistToken);case 68:exists=_context11.sent;if(exists){instructions.push(Token.createApproveInstruction(TOKEN_PROGRAM_ID,whitelistToken,whitelistBurnAuthority.publicKey,payer,[],1));cleanupInstructions.push(Token.createRevokeInstruction(TOKEN_PROGRAM_ID,whitelistToken,payer,[]));}case 70:if(candyMachine.state.tokenMint){transferAuthority=anchor.web3.Keypair.generate();signers.push(transferAuthority);remainingAccounts.push({pubkey:userPayingAccountAddress,isWritable:true,isSigner:false});remainingAccounts.push({pubkey:transferAuthority.publicKey,isWritable:false,isSigner:true});instructions.push(Token.createApproveInstruction(TOKEN_PROGRAM_ID,userPayingAccountAddress,transferAuthority.publicKey,payer,[],candyMachine.state.price.toNumber()));cleanupInstructions.push(Token.createRevokeInstruction(TOKEN_PROGRAM_ID,userPayingAccountAddress,payer,[]));}_context11.next=73;return getMetadata(mint.publicKey);case 73:metadataAddress=_context11.sent;_context11.next=76;return getMasterEdition(mint.publicKey);case 76:masterEdition=_context11.sent;_context11.next=79;return getCandyMachineCreator(candyMachineAddress);case 79:_yield$getCandyMachin=_context11.sent;_yield$getCandyMachin2=_slicedToArray(_yield$getCandyMachin,2);candyMachineCreator=_yield$getCandyMachin2[0];creatorBump=_yield$getCandyMachin2[1];console.log(remainingAccounts.map(function(rm){return rm.pubkey.toBase58();}));_context11.t21=instructions;_context11.next=87;return candyMachine.program.instruction.mintNft(creatorBump,{accounts:{candyMachine:candyMachineAddress,candyMachineCreator:candyMachineCreator,payer:payer,wallet:candyMachine.state.treasury,mint:mint.publicKey,metadata:metadataAddress,masterEdition:masterEdition,mintAuthority:payer,updateAuthority:payer,tokenMetadataProgram:TOKEN_METADATA_PROGRAM_ID,tokenProgram:TOKEN_PROGRAM_ID,systemProgram:SystemProgram.programId,rent:anchor.web3.SYSVAR_RENT_PUBKEY,clock:anchor.web3.SYSVAR_CLOCK_PUBKEY,recentBlockhashes:SYSVAR_SLOT_HASHES_PUBKEY,instructionSysvarAccount:anchor.web3.SYSVAR_INSTRUCTIONS_PUBKEY},remainingAccounts:remainingAccounts.length>0?remainingAccounts:undefined});case 87:_context11.t22=_context11.sent;_context11.t21.push.call(_context11.t21,_context11.t22);_context11.next=91;return getCollectionPDA(candyMachineAddress);case 91:_yield$getCollectionP=_context11.sent;_yield$getCollectionP2=_slicedToArray(_yield$getCollectionP,1);collectionPDA=_yield$getCollectionP2[0];_context11.next=96;return candyMachine.program.provider.connection.getAccountInfo(collectionPDA);case 96:collectionPDAAccount=_context11.sent;if(!(collectionPDAAccount&&candyMachine.state.retainAuthority)){_context11.next=127;break;}_context11.prev=98;_context11.next=101;return candyMachine.program.account.collectionPda.fetch(collectionPDA);case 101:collectionData=_context11.sent;console.log(collectionData);collectionMint=collectionData.mint;_context11.next=106;return getCollectionAuthorityRecordPDA(collectionMint,collectionPDA);case 106:collectionAuthorityRecord=_context11.sent;console.log(collectionMint);if(!collectionMint){_context11.next=122;break;}_context11.next=111;return getMetadata(collectionMint);case 111:collectionMetadata=_context11.sent;_context11.next=114;return getMasterEdition(collectionMint);case 114:collectionMasterEdition=_context11.sent;console.log('Collection PDA: ',collectionPDA.toBase58());console.log('Authority: ',candyMachine.state.authority.toBase58());_context11.t23=instructions;_context11.next=120;return candyMachine.program.instruction.setCollectionDuringMint({accounts:{candyMachine:candyMachineAddress,metadata:metadataAddress,payer:payer,collectionPda:collectionPDA,tokenMetadataProgram:TOKEN_METADATA_PROGRAM_ID,instructions:anchor.web3.SYSVAR_INSTRUCTIONS_PUBKEY,collectionMint:collectionMint,collectionMetadata:collectionMetadata,collectionMasterEdition:collectionMasterEdition,authority:candyMachine.state.authority,collectionAuthorityRecord:collectionAuthorityRecord}});case 120:_context11.t24=_context11.sent;_context11.t23.push.call(_context11.t23,_context11.t24);case 122:_context11.next=127;break;case 124:_context11.prev=124;_context11.t25=_context11[\"catch\"](98);console.error(_context11.t25);case 127:instructionsMatrix=[instructions,cleanupInstructions];signersMatrix=[signers,[]];_context11.prev=129;_context11.next=132;return sendTransactions(candyMachine.program.provider.connection,candyMachine.program.provider.wallet,instructionsMatrix,signersMatrix,SequenceType.StopOnFailure,'singleGossip',function(){},function(){return false;},undefined,beforeTransactions,afterTransactions);case 132:txns=_context11.sent.txs.map(function(t){return t.txid;});mintTxn=txns[0];return _context11.abrupt(\"return\",{mintTxId:mintTxn,metadataKey:metadataAddress});case 137:_context11.prev=137;_context11.t26=_context11[\"catch\"](129);console.log(_context11.t26);case 140:return _context11.abrupt(\"return\",null);case 141:case\"end\":return _context11.stop();}}},_callee11,null,[[98,124],[129,137]]);}));return function mintOneToken(_x17,_x18){return _ref11.apply(this,arguments);};}();export var shortenAddress=function shortenAddress(address){var chars=arguments.length>1&&arguments[1]!==undefined?arguments[1]:4;return\"\".concat(address.slice(0,chars),\"...\").concat(address.slice(-chars));};var sleep=function sleep(ms){return new Promise(function(resolve){return setTimeout(resolve,ms);});};","map":{"version":3,"sources":["C:/Users/Kamikaze/Desktop/Mainnet/metaplex/js/packages/candy-machine-ui/src/candy-machine.ts"],"names":["anchor","MintLayout","TOKEN_PROGRAM_ID","Token","SystemProgram","SYSVAR_SLOT_HASHES_PUBKEY","sendTransactions","SequenceType","CIVIC","getAtaForMint","getNetworkExpire","getNetworkToken","SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID","CANDY_MACHINE_PROGRAM","web3","PublicKey","TOKEN_METADATA_PROGRAM_ID","awaitTransactionSignatureConfirmation","txid","timeout","connection","queryStatus","done","status","slot","confirmations","err","subId","Promise","resolve","reject","setTimeout","console","log","getSignatureStatuses","signatureStatuses","value","sleep","_signatureSubscriptions","removeSignatureListener","createAssociatedTokenAccountInstruction","associatedTokenAddress","payer","walletAddress","splTokenMintAddress","keys","pubkey","isSigner","isWritable","programId","SYSVAR_RENT_PUBKEY","TransactionInstruction","data","Buffer","from","getCandyMachineState","anchorWallet","candyMachineId","provider","Provider","preflightCommitment","Program","fetchIdl","idl","program","account","candyMachine","fetch","state","itemsAvailable","toNumber","itemsRedeemed","itemsRemaining","id","authority","isSoldOut","isActive","isPresale","isWhitelistOnly","goLiveDate","treasury","wallet","tokenMint","gatekeeper","endSettings","whitelistMintSettings","hiddenSettings","price","retainAuthority","getMasterEdition","mint","findProgramAddress","toBuffer","getMetadata","getCandyMachineCreator","getCollectionPDA","candyMachineAddress","getCollectionAuthorityRecordPDA","newAuthority","createAccountsForMint","Keypair","generate","publicKey","userTokenAccountAddress","signers","span","getMinimumBalanceForRentExemption","fromPubkey","newAccountPubkey","space","lamports","createAccount","createInitMintInstruction","createMintToInstruction","instructions","StopOnFailure","undefined","txs","userTokenAccount","transaction","mintOneToken","beforeTransactions","afterTransactions","setupState","userPayingAccountAddress","remainingAccounts","cleanupInstructions","push","gatekeeperNetwork","expireOnUse","whitelistToken","mode","burnEveryTime","whitelistBurnAuthority","getAccountInfo","exists","createApproveInstruction","createRevokeInstruction","transferAuthority","metadataAddress","masterEdition","candyMachineCreator","creatorBump","map","rm","toBase58","instruction","mintNft","accounts","metadata","mintAuthority","updateAuthority","tokenMetadataProgram","tokenProgram","systemProgram","rent","clock","SYSVAR_CLOCK_PUBKEY","recentBlockhashes","instructionSysvarAccount","SYSVAR_INSTRUCTIONS_PUBKEY","length","collectionPDA","collectionPDAAccount","collectionPda","collectionData","collectionMint","collectionAuthorityRecord","collectionMetadata","collectionMasterEdition","setCollectionDuringMint","error","instructionsMatrix","signersMatrix","txns","t","mintTxn","mintTxId","metadataKey","shortenAddress","address","chars","slice","ms"],"mappings":"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","sourcesContent":["import * as anchor from '@project-serum/anchor';\r\n\r\nimport { MintLayout, TOKEN_PROGRAM_ID, Token } from '@solana/spl-token';\r\nimport {\r\n  SystemProgram,\r\n  Transaction,\r\n  SYSVAR_SLOT_HASHES_PUBKEY,\r\n} from '@solana/web3.js';\r\nimport { sendTransactions, SequenceType } from './connection';\r\n\r\nimport {\r\n  CIVIC,\r\n  getAtaForMint,\r\n  getNetworkExpire,\r\n  getNetworkToken,\r\n  SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\r\n} from './utils';\r\n\r\nexport const CANDY_MACHINE_PROGRAM = new anchor.web3.PublicKey(\r\n  'cndy3Z4yapfJBmL3ShUp5exZKqR3z33thTzeNMm2gRZ',\r\n);\r\n\r\nconst TOKEN_METADATA_PROGRAM_ID = new anchor.web3.PublicKey(\r\n  'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s',\r\n);\r\n\r\ninterface CandyMachineState {\r\n  authority: anchor.web3.PublicKey;\r\n  itemsAvailable: number;\r\n  itemsRedeemed: number;\r\n  itemsRemaining: number;\r\n  treasury: anchor.web3.PublicKey;\r\n  tokenMint: null | anchor.web3.PublicKey;\r\n  isSoldOut: boolean;\r\n  isActive: boolean;\r\n  isPresale: boolean;\r\n  isWhitelistOnly: boolean;\r\n  goLiveDate: anchor.BN;\r\n  price: anchor.BN;\r\n  gatekeeper: null | {\r\n    expireOnUse: boolean;\r\n    gatekeeperNetwork: anchor.web3.PublicKey;\r\n  };\r\n  endSettings: null | {\r\n    number: anchor.BN;\r\n    endSettingType: any;\r\n  };\r\n  whitelistMintSettings: null | {\r\n    mode: any;\r\n    mint: anchor.web3.PublicKey;\r\n    presale: boolean;\r\n    discountPrice: null | anchor.BN;\r\n  };\r\n  hiddenSettings: null | {\r\n    name: string;\r\n    uri: string;\r\n    hash: Uint8Array;\r\n  };\r\n  retainAuthority: boolean;\r\n}\r\n\r\nexport interface CandyMachineAccount {\r\n  id: anchor.web3.PublicKey;\r\n  program: anchor.Program;\r\n  state: CandyMachineState;\r\n}\r\n\r\nexport const awaitTransactionSignatureConfirmation = async (\r\n  txid: anchor.web3.TransactionSignature,\r\n  timeout: number,\r\n  connection: anchor.web3.Connection,\r\n  queryStatus = false,\r\n): Promise<anchor.web3.SignatureStatus | null | void> => {\r\n  let done = false;\r\n  let status: anchor.web3.SignatureStatus | null | void = {\r\n    slot: 0,\r\n    confirmations: 0,\r\n    err: null,\r\n  };\r\n  let subId = 0;\r\n  status = await new Promise(async (resolve, reject) => {\r\n    setTimeout(() => {\r\n      if (done) {\r\n        return;\r\n      }\r\n      done = true;\r\n      console.log('Rejecting for timeout...');\r\n      reject({ timeout: true });\r\n    }, timeout);\r\n\r\n    while (!done && queryStatus) {\r\n      // eslint-disable-next-line no-loop-func\r\n      (async () => {\r\n        try {\r\n          const signatureStatuses = await connection.getSignatureStatuses([\r\n            txid,\r\n          ]);\r\n          status = signatureStatuses && signatureStatuses.value[0];\r\n          if (!done) {\r\n            if (!status) {\r\n              console.log('REST null result for', txid, status);\r\n            } else if (status.err) {\r\n              console.log('REST error for', txid, status);\r\n              done = true;\r\n              reject(status.err);\r\n            } else if (!status.confirmations) {\r\n              console.log('REST no confirmations for', txid, status);\r\n            } else {\r\n              console.log('REST confirmation for', txid, status);\r\n              done = true;\r\n              resolve(status);\r\n            }\r\n          }\r\n        } catch (e) {\r\n          if (!done) {\r\n            console.log('REST connection error: txid', txid, e);\r\n          }\r\n        }\r\n      })();\r\n      await sleep(2000);\r\n    }\r\n  });\r\n\r\n  //@ts-ignore\r\n  if (connection._signatureSubscriptions[subId]) {\r\n    connection.removeSignatureListener(subId);\r\n  }\r\n  done = true;\r\n  console.log('Returning status', status);\r\n  return status;\r\n};\r\n\r\nconst createAssociatedTokenAccountInstruction = (\r\n  associatedTokenAddress: anchor.web3.PublicKey,\r\n  payer: anchor.web3.PublicKey,\r\n  walletAddress: anchor.web3.PublicKey,\r\n  splTokenMintAddress: anchor.web3.PublicKey,\r\n) => {\r\n  const keys = [\r\n    { pubkey: payer, isSigner: true, isWritable: true },\r\n    { pubkey: associatedTokenAddress, isSigner: false, isWritable: true },\r\n    { pubkey: walletAddress, isSigner: false, isWritable: false },\r\n    { pubkey: splTokenMintAddress, isSigner: false, isWritable: false },\r\n    {\r\n      pubkey: anchor.web3.SystemProgram.programId,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\r\n    {\r\n      pubkey: anchor.web3.SYSVAR_RENT_PUBKEY,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n  ];\r\n  return new anchor.web3.TransactionInstruction({\r\n    keys,\r\n    programId: SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\r\n    data: Buffer.from([]),\r\n  });\r\n};\r\n\r\nexport const getCandyMachineState = async (\r\n  anchorWallet: anchor.Wallet,\r\n  candyMachineId: anchor.web3.PublicKey,\r\n  connection: anchor.web3.Connection,\r\n): Promise<CandyMachineAccount> => {\r\n  const provider = new anchor.Provider(connection, anchorWallet, {\r\n    preflightCommitment: 'processed',\r\n  });\r\n\r\n  const idl = await anchor.Program.fetchIdl(CANDY_MACHINE_PROGRAM, provider);\r\n\r\n  const program = new anchor.Program(idl!, CANDY_MACHINE_PROGRAM, provider);\r\n\r\n  const state: any = await program.account.candyMachine.fetch(candyMachineId);\r\n  const itemsAvailable = state.data.itemsAvailable.toNumber();\r\n  const itemsRedeemed = state.itemsRedeemed.toNumber();\r\n  const itemsRemaining = itemsAvailable - itemsRedeemed;\r\n\r\n  return {\r\n    id: candyMachineId,\r\n    program,\r\n    state: {\r\n      authority: state.authority,\r\n      itemsAvailable,\r\n      itemsRedeemed,\r\n      itemsRemaining,\r\n      isSoldOut: itemsRemaining === 0,\r\n      isActive: false,\r\n      isPresale: false,\r\n      isWhitelistOnly: false,\r\n      goLiveDate: state.data.goLiveDate,\r\n      treasury: state.wallet,\r\n      tokenMint: state.tokenMint,\r\n      gatekeeper: state.data.gatekeeper,\r\n      endSettings: state.data.endSettings,\r\n      whitelistMintSettings: state.data.whitelistMintSettings,\r\n      hiddenSettings: state.data.hiddenSettings,\r\n      price: state.data.price,\r\n      retainAuthority: state.data.retainAuthority,\r\n    },\r\n  };\r\n};\r\n\r\nconst getMasterEdition = async (\r\n  mint: anchor.web3.PublicKey,\r\n): Promise<anchor.web3.PublicKey> => {\r\n  return (\r\n    await anchor.web3.PublicKey.findProgramAddress(\r\n      [\r\n        Buffer.from('metadata'),\r\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\r\n        mint.toBuffer(),\r\n        Buffer.from('edition'),\r\n      ],\r\n      TOKEN_METADATA_PROGRAM_ID,\r\n    )\r\n  )[0];\r\n};\r\n\r\nconst getMetadata = async (\r\n  mint: anchor.web3.PublicKey,\r\n): Promise<anchor.web3.PublicKey> => {\r\n  return (\r\n    await anchor.web3.PublicKey.findProgramAddress(\r\n      [\r\n        Buffer.from('metadata'),\r\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\r\n        mint.toBuffer(),\r\n      ],\r\n      TOKEN_METADATA_PROGRAM_ID,\r\n    )\r\n  )[0];\r\n};\r\n\r\nexport const getCandyMachineCreator = async (\r\n  candyMachine: anchor.web3.PublicKey,\r\n): Promise<[anchor.web3.PublicKey, number]> => {\r\n  return await anchor.web3.PublicKey.findProgramAddress(\r\n    [Buffer.from('candy_machine'), candyMachine.toBuffer()],\r\n    CANDY_MACHINE_PROGRAM,\r\n  );\r\n};\r\n\r\nexport const getCollectionPDA = async (\r\n  candyMachineAddress: anchor.web3.PublicKey,\r\n): Promise<[anchor.web3.PublicKey, number]> => {\r\n  return await anchor.web3.PublicKey.findProgramAddress(\r\n    [Buffer.from('collection'), candyMachineAddress.toBuffer()],\r\n    CANDY_MACHINE_PROGRAM,\r\n  );\r\n};\r\n\r\nexport interface CollectionData {\r\n  mint: anchor.web3.PublicKey;\r\n  candyMachine: anchor.web3.PublicKey;\r\n}\r\n\r\nexport const getCollectionAuthorityRecordPDA = async (\r\n  mint: anchor.web3.PublicKey,\r\n  newAuthority: anchor.web3.PublicKey,\r\n): Promise<anchor.web3.PublicKey> => {\r\n  return (\r\n    await anchor.web3.PublicKey.findProgramAddress(\r\n      [\r\n        Buffer.from('metadata'),\r\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\r\n        mint.toBuffer(),\r\n        Buffer.from('collection_authority'),\r\n        newAuthority.toBuffer(),\r\n      ],\r\n      TOKEN_METADATA_PROGRAM_ID,\r\n    )\r\n  )[0];\r\n};\r\n\r\nexport type SetupState = {\r\n  mint: anchor.web3.Keypair;\r\n  userTokenAccount: anchor.web3.PublicKey;\r\n  transaction: string;\r\n};\r\n\r\nexport const createAccountsForMint = async (\r\n  candyMachine: CandyMachineAccount,\r\n  payer: anchor.web3.PublicKey,\r\n): Promise<SetupState> => {\r\n  const mint = anchor.web3.Keypair.generate();\r\n  const userTokenAccountAddress = (\r\n    await getAtaForMint(mint.publicKey, payer)\r\n  )[0];\r\n\r\n  const signers: anchor.web3.Keypair[] = [mint];\r\n  const instructions = [\r\n    anchor.web3.SystemProgram.createAccount({\r\n      fromPubkey: payer,\r\n      newAccountPubkey: mint.publicKey,\r\n      space: MintLayout.span,\r\n      lamports:\r\n        await candyMachine.program.provider.connection.getMinimumBalanceForRentExemption(\r\n          MintLayout.span,\r\n        ),\r\n      programId: TOKEN_PROGRAM_ID,\r\n    }),\r\n    Token.createInitMintInstruction(\r\n      TOKEN_PROGRAM_ID,\r\n      mint.publicKey,\r\n      0,\r\n      payer,\r\n      payer,\r\n    ),\r\n    createAssociatedTokenAccountInstruction(\r\n      userTokenAccountAddress,\r\n      payer,\r\n      payer,\r\n      mint.publicKey,\r\n    ),\r\n    Token.createMintToInstruction(\r\n      TOKEN_PROGRAM_ID,\r\n      mint.publicKey,\r\n      userTokenAccountAddress,\r\n      payer,\r\n      [],\r\n      1,\r\n    ),\r\n  ];\r\n\r\n  return {\r\n    mint: mint,\r\n    userTokenAccount: userTokenAccountAddress,\r\n    transaction: (\r\n      await sendTransactions(\r\n        candyMachine.program.provider.connection,\r\n        candyMachine.program.provider.wallet,\r\n        [instructions],\r\n        [signers],\r\n        SequenceType.StopOnFailure,\r\n        'singleGossip',\r\n        () => {},\r\n        () => false,\r\n        undefined,\r\n        [],\r\n        [],\r\n      )\r\n    ).txs[0].txid,\r\n  };\r\n};\r\n\r\ntype MintResult = {\r\n  mintTxId: string;\r\n  metadataKey: anchor.web3.PublicKey;\r\n};\r\n\r\nexport const mintOneToken = async (\r\n  candyMachine: CandyMachineAccount,\r\n  payer: anchor.web3.PublicKey,\r\n  beforeTransactions: Transaction[] = [],\r\n  afterTransactions: Transaction[] = [],\r\n  setupState?: SetupState,\r\n): Promise<MintResult | null> => {\r\n  const mint = setupState?.mint ?? anchor.web3.Keypair.generate();\r\n  const userTokenAccountAddress = (\r\n    await getAtaForMint(mint.publicKey, payer)\r\n  )[0];\r\n\r\n  const userPayingAccountAddress = candyMachine.state.tokenMint\r\n    ? (await getAtaForMint(candyMachine.state.tokenMint, payer))[0]\r\n    : payer;\r\n\r\n  const candyMachineAddress = candyMachine.id;\r\n  const remainingAccounts = [];\r\n  const cleanupInstructions = [];\r\n  const instructions = [];\r\n  const signers: anchor.web3.Keypair[] = [];\r\n  console.log('SetupState: ', setupState);\r\n  if (!setupState) {\r\n    signers.push(mint);\r\n    instructions.push(\r\n      ...[\r\n        anchor.web3.SystemProgram.createAccount({\r\n          fromPubkey: payer,\r\n          newAccountPubkey: mint.publicKey,\r\n          space: MintLayout.span,\r\n          lamports:\r\n            await candyMachine.program.provider.connection.getMinimumBalanceForRentExemption(\r\n              MintLayout.span,\r\n            ),\r\n          programId: TOKEN_PROGRAM_ID,\r\n        }),\r\n        Token.createInitMintInstruction(\r\n          TOKEN_PROGRAM_ID,\r\n          mint.publicKey,\r\n          0,\r\n          payer,\r\n          payer,\r\n        ),\r\n        createAssociatedTokenAccountInstruction(\r\n          userTokenAccountAddress,\r\n          payer,\r\n          payer,\r\n          mint.publicKey,\r\n        ),\r\n        Token.createMintToInstruction(\r\n          TOKEN_PROGRAM_ID,\r\n          mint.publicKey,\r\n          userTokenAccountAddress,\r\n          payer,\r\n          [],\r\n          1,\r\n        ),\r\n      ],\r\n    );\r\n  }\r\n\r\n  if (candyMachine.state.gatekeeper) {\r\n    remainingAccounts.push({\r\n      pubkey: (\r\n        await getNetworkToken(\r\n          payer,\r\n          candyMachine.state.gatekeeper.gatekeeperNetwork,\r\n        )\r\n      )[0],\r\n      isWritable: true,\r\n      isSigner: false,\r\n    });\r\n\r\n    if (candyMachine.state.gatekeeper.expireOnUse) {\r\n      remainingAccounts.push({\r\n        pubkey: CIVIC,\r\n        isWritable: false,\r\n        isSigner: false,\r\n      });\r\n      remainingAccounts.push({\r\n        pubkey: (\r\n          await getNetworkExpire(\r\n            candyMachine.state.gatekeeper.gatekeeperNetwork,\r\n          )\r\n        )[0],\r\n        isWritable: false,\r\n        isSigner: false,\r\n      });\r\n    }\r\n  }\r\n  if (candyMachine.state.whitelistMintSettings) {\r\n    const mint = new anchor.web3.PublicKey(\r\n      candyMachine.state.whitelistMintSettings.mint,\r\n    );\r\n\r\n    const whitelistToken = (await getAtaForMint(mint, payer))[0];\r\n    remainingAccounts.push({\r\n      pubkey: whitelistToken,\r\n      isWritable: true,\r\n      isSigner: false,\r\n    });\r\n\r\n    if (candyMachine.state.whitelistMintSettings.mode.burnEveryTime) {\r\n      const whitelistBurnAuthority = anchor.web3.Keypair.generate();\r\n\r\n      remainingAccounts.push({\r\n        pubkey: mint,\r\n        isWritable: true,\r\n        isSigner: false,\r\n      });\r\n      remainingAccounts.push({\r\n        pubkey: whitelistBurnAuthority.publicKey,\r\n        isWritable: false,\r\n        isSigner: true,\r\n      });\r\n      signers.push(whitelistBurnAuthority);\r\n      const exists =\r\n        await candyMachine.program.provider.connection.getAccountInfo(\r\n          whitelistToken,\r\n        );\r\n      if (exists) {\r\n        instructions.push(\r\n          Token.createApproveInstruction(\r\n            TOKEN_PROGRAM_ID,\r\n            whitelistToken,\r\n            whitelistBurnAuthority.publicKey,\r\n            payer,\r\n            [],\r\n            1,\r\n          ),\r\n        );\r\n        cleanupInstructions.push(\r\n          Token.createRevokeInstruction(\r\n            TOKEN_PROGRAM_ID,\r\n            whitelistToken,\r\n            payer,\r\n            [],\r\n          ),\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  if (candyMachine.state.tokenMint) {\r\n    const transferAuthority = anchor.web3.Keypair.generate();\r\n\r\n    signers.push(transferAuthority);\r\n    remainingAccounts.push({\r\n      pubkey: userPayingAccountAddress,\r\n      isWritable: true,\r\n      isSigner: false,\r\n    });\r\n    remainingAccounts.push({\r\n      pubkey: transferAuthority.publicKey,\r\n      isWritable: false,\r\n      isSigner: true,\r\n    });\r\n\r\n    instructions.push(\r\n      Token.createApproveInstruction(\r\n        TOKEN_PROGRAM_ID,\r\n        userPayingAccountAddress,\r\n        transferAuthority.publicKey,\r\n        payer,\r\n        [],\r\n        candyMachine.state.price.toNumber(),\r\n      ),\r\n    );\r\n    cleanupInstructions.push(\r\n      Token.createRevokeInstruction(\r\n        TOKEN_PROGRAM_ID,\r\n        userPayingAccountAddress,\r\n        payer,\r\n        [],\r\n      ),\r\n    );\r\n  }\r\n  const metadataAddress = await getMetadata(mint.publicKey);\r\n  const masterEdition = await getMasterEdition(mint.publicKey);\r\n\r\n  const [candyMachineCreator, creatorBump] = await getCandyMachineCreator(\r\n    candyMachineAddress,\r\n  );\r\n\r\n  console.log(remainingAccounts.map(rm => rm.pubkey.toBase58()));\r\n  instructions.push(\r\n    await candyMachine.program.instruction.mintNft(creatorBump, {\r\n      accounts: {\r\n        candyMachine: candyMachineAddress,\r\n        candyMachineCreator,\r\n        payer: payer,\r\n        wallet: candyMachine.state.treasury,\r\n        mint: mint.publicKey,\r\n        metadata: metadataAddress,\r\n        masterEdition,\r\n        mintAuthority: payer,\r\n        updateAuthority: payer,\r\n        tokenMetadataProgram: TOKEN_METADATA_PROGRAM_ID,\r\n        tokenProgram: TOKEN_PROGRAM_ID,\r\n        systemProgram: SystemProgram.programId,\r\n        rent: anchor.web3.SYSVAR_RENT_PUBKEY,\r\n        clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\r\n        recentBlockhashes: SYSVAR_SLOT_HASHES_PUBKEY,\r\n        instructionSysvarAccount: anchor.web3.SYSVAR_INSTRUCTIONS_PUBKEY,\r\n      },\r\n      remainingAccounts:\r\n        remainingAccounts.length > 0 ? remainingAccounts : undefined,\r\n    }),\r\n  );\r\n\r\n  const [collectionPDA] = await getCollectionPDA(candyMachineAddress);\r\n  const collectionPDAAccount =\r\n    await candyMachine.program.provider.connection.getAccountInfo(\r\n      collectionPDA,\r\n    );\r\n\r\n  if (collectionPDAAccount && candyMachine.state.retainAuthority) {\r\n    try {\r\n      const collectionData =\r\n        (await candyMachine.program.account.collectionPda.fetch(\r\n          collectionPDA,\r\n        )) as CollectionData;\r\n      console.log(collectionData);\r\n      const collectionMint = collectionData.mint;\r\n      const collectionAuthorityRecord = await getCollectionAuthorityRecordPDA(\r\n        collectionMint,\r\n        collectionPDA,\r\n      );\r\n      console.log(collectionMint);\r\n      if (collectionMint) {\r\n        const collectionMetadata = await getMetadata(collectionMint);\r\n        const collectionMasterEdition = await getMasterEdition(collectionMint);\r\n        console.log('Collection PDA: ', collectionPDA.toBase58());\r\n        console.log('Authority: ', candyMachine.state.authority.toBase58());\r\n        instructions.push(\r\n          await candyMachine.program.instruction.setCollectionDuringMint({\r\n            accounts: {\r\n              candyMachine: candyMachineAddress,\r\n              metadata: metadataAddress,\r\n              payer: payer,\r\n              collectionPda: collectionPDA,\r\n              tokenMetadataProgram: TOKEN_METADATA_PROGRAM_ID,\r\n              instructions: anchor.web3.SYSVAR_INSTRUCTIONS_PUBKEY,\r\n              collectionMint,\r\n              collectionMetadata,\r\n              collectionMasterEdition,\r\n              authority: candyMachine.state.authority,\r\n              collectionAuthorityRecord,\r\n            },\r\n          }),\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  const instructionsMatrix = [instructions, cleanupInstructions];\r\n  const signersMatrix = [signers, []];\r\n\r\n  try {\r\n    const txns = (\r\n      await sendTransactions(\r\n        candyMachine.program.provider.connection,\r\n        candyMachine.program.provider.wallet,\r\n        instructionsMatrix,\r\n        signersMatrix,\r\n        SequenceType.StopOnFailure,\r\n        'singleGossip',\r\n        () => {},\r\n        () => false,\r\n        undefined,\r\n        beforeTransactions,\r\n        afterTransactions,\r\n      )\r\n    ).txs.map(t => t.txid);\r\n    const mintTxn = txns[0];\r\n    return {\r\n      mintTxId: mintTxn,\r\n      metadataKey: metadataAddress,\r\n    };\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const shortenAddress = (address: string, chars = 4): string => {\r\n  return `${address.slice(0, chars)}...${address.slice(-chars)}`;\r\n};\r\n\r\nconst sleep = (ms: number): Promise<void> => {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}